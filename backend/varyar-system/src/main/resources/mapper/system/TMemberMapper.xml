<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newlandnpt.varyar.system.mapper.TMemberMapper">

    <resultMap type="TMember" id="MemberResult">
        <result property="memberId" column="member_id"/>
        <result property="no" column="no"/>
        <result property="phone" column="phone"/>
        <result property="password" column="password"/>
        <result property="parameter" column="member_parameter" javaType="com.newlandnpt.varyar.common.core.domain.entity.MemberParameter" typeHandler="com.newlandnpt.varyar.common.core.mybatis.JSONTypeHandler"/>
        <result property="distributeFlag" column="distribute_flag"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <result property="userPhone" column="user_phone"/>
        <result property="registrationId" column="registration_id"/>
        <result property="registrationType" column="registration_type"/>
        <result property="orgId" column="org_id"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <collection property="contacts" ofType="TMemberContacts" select="selectContacts" column="{memberId = member_id}"/>
    </resultMap>

    <select id="selectContacts" resultMap="MemberContactsResult">
        select membercontacts_id,
               member_id,
               name,
               phone,
               order_num,
               del_flag,
               create_time,
               update_time
        from t_membercontacts
        where member_id = #{memberId}
    </select>
    <resultMap type="TMemberContacts" id="MemberContactsResult">
        <result property="memberContactsId" column="membercontacts_id"/>
        <result property="memberId" column="member_id"/>
        <result property="name" column="name"/>
        <result property="phone" column="phone"/>
        <result property="orderNum" column="order_num"/>
        <result property="delFlag" column="del_flag"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <sql id="selectMemberVo">
        select member_id, no, phone, password, distribute_flag, user_id, user_name,
            (select mobile_phone from sys_user where user_id = m.user_id) user_phone,member_parameter,
            del_flag,m.registration_id,m.registration_type,m.org_id,create_time, update_time
        from t_member m
    </sql>

    <sql id="parameter">
        #{parameter,javaType=com.newlandnpt.varyar.common.core.domain.entity.MemberParameter,typeHandler = com.newlandnpt.varyar.common.core.mybatis.JSONTypeHandler}
    </sql>

    <select id="selectMemberList" parameterType="TMember" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        <where>
            <if test="no != null  and no != ''">and no = #{no}</if>
            <if test="phone != null  and phone != ''">and phone = #{phone}</if>
            <if test="password != null  and password != ''">and password = #{password}</if>
            <if test="distributeFlag != null  and distributeFlag != ''">and distribute_flag = #{distributeFlag}</if>
            <if test="userId != null ">and user_id = #{userId}</if>
            <if test="params.userMobilePhone != null ">
                and user_id in (select user_id from sys_user u where u.mobile_phone like concat('%', #{params.userMobilePhone}, '%'))
            </if>
            <if test="params.arrangeUser != null ">
                <if test='params.arrangeUser == "false" '>
                    and user_id is null
                </if>

                <if test='params.arrangeUser == "true" '>
                    and user_id is not null
                </if>
            </if>
            <if test="userName != null  and userName != ''">and user_name like concat('%', #{userName}, '%')</if>
            and del_flag = '0'
            <!-- 数据范围过滤 -->
            ${params.dataScope}
        </where>
        Order By create_time desc
    </select>

    <select id="selectMemberByMemberId" parameterType="Long" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        where member_id = #{memberId}
    </select>


    <select id="selectMemberByPhone" parameterType="String" resultMap="MemberResult">
        <include refid="selectMemberVo"/>
        where m.phone = #{phone} and m.del_flag = '0'
    </select>

    <insert id="insertMember" parameterType="TMember" useGeneratedKeys="true" keyProperty="memberId">
        insert into t_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="no != null">no,</if>
            <if test="phone != null">phone,</if>
            <if test="password != null">password,</if>
            <if test="parameter != null">member_parameter,</if>
            <if test="distributeFlag != null">distribute_flag,</if>
            <if test="userId != null">user_id,</if>
            <if test="userName != null">user_name,</if>
            <if test="orgId != null">org_id,</if>
            <if test="delFlag != null">del_flag,</if>
            create_time
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="no != null">#{no},</if>
            <if test="phone != null">#{phone},</if>
            <if test="password != null">#{password},</if>
            <if test="parameter != null"><include refid="parameter"/>,</if>
            <if test="distributeFlag != null">#{distributeFlag},</if>
            <if test="userId != null">#{userId},</if>
            <if test="userName != null">#{userName},</if>
            <if test="orgId != null">#{orgId},</if>
            <if test="delFlag != null">#{delFlag},</if>
            sysdate()
        </trim>
    </insert>

    <update id="updateMember" parameterType="TMember">
        update t_member
        <trim prefix="SET" suffixOverrides=",">
            <if test="no != null">no = #{no},</if>
            <if test="phone != null">phone = #{phone},</if>
            <if test="password != null">password = #{password},</if>
            <if test="parameter != null">member_parameter = <include refid="parameter"/>,</if>
            <if test="distributeFlag != null">distribute_flag = #{distributeFlag},</if>
            <if test="userId != null or distributeFlag != null ">user_id = #{userId},</if>
            <if test="userName != null or distributeFlag != null  ">user_name = #{userName},</if>
            <if test="delFlag != null">del_flag = #{delFlag},</if>
            <if test="registrationId != null">registration_id = #{registrationId},</if>
            <if test="registrationType != null">registration_type = #{registrationType},</if>
            <if test="orgId != null">org_id = #{orgId},</if>
            update_time = sysdate()
        </trim>
        where member_id = #{memberId}
    </update>

    <update id="updateUserPhone" parameterType="TMember">
        update t_member set phone = #{phone} where user_name = #{userName}
    </update>

    <update id="resetUserPwd" parameterType="TMember">
        update t_member set password = #{password},update_time = sysdate() where phone = #{phone}
    </update>


    <delete id="deleteMemberByMemberId" parameterType="Long">
        update t_member
        set del_flag = '2'
        where member_id = #{memberId}
    </delete>

    <delete id="deleteMemberByMemberIds" parameterType="String">
        update t_member
        set del_flag = '2'
        where member_id in
        <foreach item="memberId" collection="array" open="(" separator="," close=")">
            #{memberId}
        </foreach>
    </delete>
</mapper>