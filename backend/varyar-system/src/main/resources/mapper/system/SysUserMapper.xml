<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newlandnpt.varyar.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id     property="userId"       column="user_id"      />
        <result property="orgId"       column="org_id"      />
        <result property="userName"     column="user_name"    />
        <result property="name"     column="name"    />
        <result property="nickName"     column="nick_name"    />
        <result property="email"        column="email"        />
        <result property="mobilePhone"  column="mobile_phone"  />
        <result property="telephone"  column="telephone"  />
        <result property="extensionNumber"  column="extension_number"  />
        <result property="sex"          column="sex"          />
        <result property="avatar"       column="avatar"       />
        <result property="password"     column="password"     />
        <result property="status"       column="status"       />
        <result property="delFlag"      column="del_flag"     />
        <result property="loginIp"      column="login_ip"     />
        <result property="loginDate"    column="login_date"   />
        <result property="createBy"     column="create_by"    />
        <result property="createTime"   column="create_time"  />
        <result property="updateBy"     column="update_by"    />
        <result property="updateTime"   column="update_time"  />
        <result property="remark"       column="remark"       />
        <association property="org"    column="org_id" javaType="TOrg" resultMap="orgResult" />
        <collection  property="roles"  javaType="java.util.List"  column="{userId = user_id}"   select="selectRoles" />
    </resultMap>
	
    <resultMap id="orgResult" type="TOrg">
        <id     property="orgId"    column="org_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="orgName"  column="org_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="type"    column="type"      />
        <result property="status"    column="org_status" />
    </resultMap>
	
    <resultMap id="RoleResult" type="SysRole">
        <id     property="roleId"       column="role_id"        />
        <result property="roleName"     column="role_name"      />
        <result property="roleKey"      column="role_key"       />
        <result property="roleSort"     column="role_sort"      />
        <result property="dataScope"     column="data_scope"    />
        <result property="status"       column="role_status"    />
    </resultMap>

	<select id="selectRoles" resultMap="RoleResult">
		select distinct r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.menu_check_strictly, r.org_check_strictly,
						r.status, r.del_flag, r.create_time, r.remark
		from sys_role r
				 left join sys_user_role ur on ur.role_id = r.role_id
		where ur.user_id = #{userId}

	</select>
	
	<sql id="selectUserVo">
        select u.user_id, u.org_id, u.user_name, u.nick_name,u.name, u.email, u.avatar, u.mobile_phone, u.telephone, u.extension_number, u.password, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark,
        d.org_id, d.parent_id, d.ancestors, d.org_name, d.order_num, d.leader, d.type, d.status as org_status
        from sys_user u
		    left join t_org d on u.org_id = d.org_id
    </sql>
    
    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
		select u.user_id, u.org_id, u.nick_name, u.user_name, u.name, u.email, u.avatar, u.mobile_phone, u.telephone, u.extension_number, u.sex, u.status, u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.org_name, d.leader
		from sys_user u
		left join t_org d on u.org_id = d.org_id
		where u.del_flag = '0'
		<if test="userId != null and userId != 0">
			AND u.user_id = #{userId}
		</if>
		<if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND u.status = #{status}
		</if>
		<if test="mobilePhone != null and mobilePhone != ''">
			AND u.mobile_phone like concat('%', #{mobilePhone}, '%')
		</if>
		<if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{params.beginTime},'%y%m%d')
		</if>
		<if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
			AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{params.endTime},'%y%m%d')
		</if>
		<if test="params.nameOrMobilePhone != null">
			AND (
				u.name like concat('%', #{params.nameOrMobilePhone}, '%')
			    or
			 	u.mobile_phone like concat('%', #{params.nameOrMobilePhone}, '%')
			)
		</if>
		<if test="params.orgIdIsNull != null">
			<if test="params.orgIdIsNull == 'true'">
				and u.org_id is null
			</if>
			<if test="params.orgIdIsNull == 'false'">
				and u.org_id is not null
			</if>
		</if>
		<if test="orgId != null and orgId != 0">
			AND (u.org_id = #{orgId}
			<if test="params.orgIdStrict == null or params.orgIdStrict =='false'">
				OR u.org_id IN ( SELECT t.org_id FROM t_org t WHERE find_in_set(#{orgId}, ancestors) )
			</if>)
		</if>
		<if test="params.roleKey != null" >
			and exists (select 1 from sys_role r, sys_user_role ur where r.role_id = ur.role_id and r.role_key = #{params.roleKey} and ur.user_id = u.user_id)
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
		Order By create_time desc
	</select>
	
	<select id="selectAllocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.org_id, u.user_name, u.nick_name, u.name, u.email, u.mobile_phone, u.telephone, u.extension_number, u.status, u.create_time
	    from sys_user u
			 left join t_org d on u.org_id = d.org_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and r.role_id = #{roleId}
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="mobilePhone != null and mobilePhone != ''">
			AND u.mobile_phone like concat('%', #{mobilePhone}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUnallocatedList" parameterType="SysUser" resultMap="SysUserResult">
	    select distinct u.user_id, u.org_id, u.user_name, u.nick_name, u.name, u.email, u.mobile_phone, u.telephone, u.extension_number, u.status, u.create_time
	    from sys_user u
			 left join t_org d on u.org_id = d.org_id
			 left join sys_user_role ur on u.user_id = ur.user_id
			 left join sys_role r on r.role_id = ur.role_id
	    where u.del_flag = '0' and (r.role_id != #{roleId} or r.role_id IS NULL)
	    and u.user_id not in (select u.user_id from sys_user u inner join sys_user_role ur on u.user_id = ur.user_id and ur.role_id = #{roleId})
	    <if test="userName != null and userName != ''">
			AND u.user_name like concat('%', #{userName}, '%')
		</if>
		<if test="mobilePhone != null and mobilePhone != ''">
			AND u.mobile_phone like concat('%', #{mobilePhone}, '%')
		</if>
		<!-- 数据范围过滤 -->
		${params.dataScope}
	</select>
	
	<select id="selectUserByUserName" parameterType="String" resultMap="SysUserResult">
	    <include refid="selectUserVo"/>
		where u.user_name = #{userName} and u.del_flag = '0'
	</select>
	
	<select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
		<include refid="selectUserVo"/>
		where u.user_id = #{userId}
	</select>
	
	<select id="checkUserNameUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, user_name from sys_user where user_name = #{userName} and del_flag = '0' limit 1
	</select>
	
	<select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, mobile_phone from sys_user where mobile_phone = #{mobilePhone} and del_flag = '0' limit 1
	</select>
	
	<select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email} and del_flag = '0' limit 1
	</select>
	
	<insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
 		insert into sys_user(
 			<if test="userId != null and userId != 0">user_id,</if>
 			<if test="orgId != null and orgId != 0">org_id,</if>
 			<if test="userName != null and userName != ''">user_name,</if>
 			<if test="name != null and name != ''">name,</if>
 			<if test="nickName != null and nickName != ''">nick_name,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="avatar != null and avatar != ''">avatar,</if>
 			<if test="mobilePhone != null and mobilePhone != ''">mobile_phone,</if>
 			<if test="telephone != null and telephone != ''">telephone,</if>
 			<if test="extensionNumber != null and extensionNumber != ''">extension_number,</if>
 			<if test="sex != null and sex != ''">sex,</if>
 			<if test="password != null and password != ''">password,</if>
 			<if test="status != null and status != ''">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			<if test="remark != null and remark != ''">remark,</if>
 			create_time
 		)values(
 			<if test="userId != null and userId != ''">#{userId},</if>
 			<if test="orgId != null and orgId != ''">#{orgId},</if>
 			<if test="userName != null and userName != ''">#{userName},</if>
			<if test="name != null and name != ''">#{name},</if>
 			<if test="nickName != null and nickName != ''">#{nickName},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="avatar != null and avatar != ''">#{avatar},</if>
			<if test="mobilePhone != null and mobilePhone != ''">#{mobilePhone},</if>
			<if test="telephone != null and telephone != ''">#{telephone},</if>
			<if test="extensionNumber != null and extensionNumber != ''">#{extensionNumber},</if>
 			<if test="sex != null and sex != ''">#{sex},</if>
 			<if test="password != null and password != ''">#{password},</if>
 			<if test="status != null and status != ''">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			<if test="remark != null and remark != ''">#{remark},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateUser" parameterType="SysUser">
 		update sys_user
 		<set>
 			<if test="orgId != null and orgId != 0">org_id = #{orgId},</if>
 			<if test="userName != null and userName != ''">user_name = #{userName},</if>
 			<if test="nickName != null and nickName != ''">nick_name = #{nickName},</if>
			<if test="name != null and name != ''">name = #{name},</if>
 			<if test="email != null ">email = #{email},</if>
 			<if test="mobilePhone != null ">mobile_phone = #{mobilePhone},</if>
			<if test="telephone != null and telephone != ''">telephone = #{telephone},</if>
			<if test="extensionNumber != null and extensionNumber != ''">extension_number = #{extensionNumber},</if>
 			<if test="sex != null and sex != ''">sex = #{sex},</if>
 			<if test="avatar != null and avatar != ''">avatar = #{avatar},</if>
 			<if test="password != null and password != ''">password = #{password},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
 			<if test="loginDate != null">login_date = #{loginDate},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			<if test="remark != null">remark = #{remark},</if>
 			update_time = sysdate()
 		</set>
 		where user_id = #{userId}
	</update>
	
	<update id="updateUserStatus" parameterType="SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>
	
	<update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where user_name = #{userName}
	</update>
	
	<update id="resetUserPwd" parameterType="SysUser">
 		update sys_user set password = #{password} where user_name = #{userName}
	</update>
	
	<delete id="deleteUserById" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id = #{userId}
 	</delete>
 	
 	<delete id="deleteUserByIds" parameterType="Long">
 		update sys_user set del_flag = '2' where user_id in
 		<foreach collection="array" item="userId" open="(" separator="," close=")">
 			#{userId}
        </foreach> 
 	</delete>
	
</mapper> 