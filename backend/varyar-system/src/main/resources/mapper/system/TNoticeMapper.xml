<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.newlandnpt.varyar.system.mapper.TNoticeMapper">
    
    <resultMap type="TNotice" id="TNoticeResult">
        <result property="noticeId"    column="notice_id"    />
        <result property="sysNoticeId"    column="sys_notice_id"    />
        <result property="memberId"    column="member_id"    />
        <result property="readFlag"    column="read_flag"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectTNoticeVo">
        select notice_id, sys_notice_id, member_id, read_flag, create_time, update_time from t_notice
    </sql>

    <select id="selectTNoticeList" parameterType="TNotice" resultMap="TNoticeResult">
        <include refid="selectTNoticeVo"/>
        <where>  
            <if test="sysNoticeId != null "> and sys_notice_id = #{sysNoticeId}</if>
            <if test="memberId != null "> and member_id = #{memberId}</if>
            <if test="readFlag != null  and readFlag != ''"> and read_flag = #{readFlag}</if>
        </where>
        Order By create_time desc
    </select>
    
    <select id="selectTNoticeByNoticeId" parameterType="Long" resultMap="TNoticeResult">
        <include refid="selectTNoticeVo"/>
        where notice_id = #{noticeId}
    </select>
    <select id="selectTNoticeByMemberId" parameterType="Long" resultMap="TNoticeResult">
    <include refid="selectTNoticeVo"/>
    where member_id = #{memberId}
    </select>
    <insert id="insertTNotice" parameterType="TNotice" useGeneratedKeys="true" keyProperty="noticeId">
        insert into t_notice
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="sysNoticeId != null">sys_notice_id,</if>
            <if test="memberId != null">member_id,</if>
            <if test="readFlag != null">read_flag,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="sysNoticeId != null">#{sysNoticeId},</if>
            <if test="memberId != null">#{memberId},</if>
            <if test="readFlag != null">#{readFlag},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateTNotice" parameterType="TNotice">
        update t_notice
        <trim prefix="SET" suffixOverrides=",">
            <if test="sysNoticeId != null">sys_notice_id = #{sysNoticeId},</if>
            <if test="memberId != null">member_id = #{memberId},</if>
            <if test="readFlag != null">read_flag = #{readFlag},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where notice_id = #{noticeId}
    </update>

    <delete id="deleteTNoticeByNoticeId" parameterType="Long">
        delete from t_notice where notice_id = #{noticeId}
    </delete>

    <delete id="deleteTNoticeByNoticeIds" parameterType="String">
        delete from t_notice where notice_id in 
        <foreach item="noticeId" collection="array" open="(" separator="," close=")">
            #{noticeId}
        </foreach>
    </delete>
</mapper>